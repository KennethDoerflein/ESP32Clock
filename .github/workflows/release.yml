# .github/workflows/release.yml

name: Create Release and Upload Firmware

# This action runs on every push to a tag that starts with "v" (e.g., v1.0.0, v2.1.3)
on:
  push:
    tags:
      - "v*"

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v5

      # 2. Set up Python, which is a dependency for PlatformIO
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      # 3. Install PlatformIO Core
      - name: Install PlatformIO
        run: pip install -U platformio

      # 4. Compile the project. This will generate the .bin file.
      - name: Build PlatformIO Project
        run: pio run

      # 5. Create a GitHub Release and upload the firmware.bin as an asset
      - name: Create Release and Upload Firmware
        uses: softprops/action-gh-release@v2
        with:
          # The files to upload as release assets.
          # IMPORTANT: Change 'esp32s3_n16r8' to your specific PlatformIO environment name.
          # You can find this name in your platformio.ini file (e.g., [env:esp32s3_n16r8])
          files: .pio/build/esp32s3_n16r8/firmware.bin

          # This creates a release with the same name as the tag pushed
          name: Release ${{ github.ref_name }}

          # This will create a "draft" release, so you can manually edit release notes before publishing
          draft: false

          # This will mark the release as "pre-release" if you want
          prerelease: false
